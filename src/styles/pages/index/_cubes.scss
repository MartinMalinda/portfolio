$cube-size: 10vw;
$cube-width: 10vw;
$cube-height: 10vh;

* {
  box-sizing: border-box;
}

.stage {
  perspective: 10000vw;
  width: 100%;
  height: 100%;
}

.row {
  width: 100%;
  height: $cube-size;
}

.cube {
  transform-style: preserve-3d;
  width: $cube-size;
  height: $cube-size;
  transition: 0.2s transform;
  transform-origin: 50% 50%;
  position: absolute;
  transform: rotateY(90deg);
  
  @each $index in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 {
    &:nth-child(#{$index}){
      left: $cube-size * $index - $cube-size + 0.01;
    }    
  }

  
  &:hover,&.active {
    transform: rotateZ(450deg) translateZ(500px);
    z-index: 5;
  }
  
  .side {
    background: transparentize(black, 0.9);
    width: $cube-size;
    height: $cube-size;
    position: absolute;
    transition: 4s transform;
    //box-shadow: inset 1px 1px 2px 3px transparentize(white, 0.9);
    
    &.front{
      transform: translateZ($cube-size/2);
      background: transparentize(mix(yellow, black, 50%), 0.9);
    }
    
    &.right{
      transform: rotateY(90deg) translateZ($cube-size/2);
      background: transparentize(mix(yellow, black, 50%), 0.99);
    }
    
    &.left{
      transform: rotateY(90deg) translateZ(-$cube-size/2);
        background: transparentize(mix(black, black, 50%), 0.95);
    }
    
    &.top{
      transform: rotateX(90deg) translateZ($cube-size/2);
      background: transparentize(mix(red, black, 50%), 0.9);
    }
        
    &.bottom{
      transform: rotateX(90deg) translateZ(-$cube-size/2);
        background: transparentize(mix(salmon, black, 50%), 0.9);
    }
    
    &.back {
      transform: translateZ(-$cube-size/2);
        background: transparentize(mix(purple, black, 50%), 0.9);
    }
  }
}